/**************************************************************************************
 * Author: Jake Carlson
 * Course: EGR 226 - 902
 * Date: 03/17/2021
 * Project: lab09part3
 * File: part3main.c
 * Description: This program cycles through the 7 segment LED from 0 to 9 or reverse
 * using 2 buttons.
 *
 **************************************************************************************/


#include "msp.h"
#include <stdio.h>
#include <stdlib.h>
#include "LCD_Library.h"

void adcsetup(void);
void SysTick_init();
void PORT5_IRQHandler();
void SysTick_Delay(uint16_t delayms);
volatile int i;




void main(void)
{
    WDT_A->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;     // stop watchdog timer

    P5->SEL1 |= BIT5;
    P5->SEL0 |= BIT5;//temp sensor
    P5->DIR &= ~BIT5;

    P5->SEL0 &= ~BIT0;
    P5->SEL1 &= ~BIT0;//button
    P5->DIR &= ~BIT0;
    P5->REN |= BIT0;
    P5->OUT |= BIT0;
    P5->IES &= ~BIT0;
    P5->IE |= BIT0;


    LCD_init();
    adcsetup();
    __enable_irq();

    TIMER_A0->CCR[0] = 23450;
    TIMER_A0->CCTL[1] = TIMER_A_CCTLN_OUTMOD_7;//Timer A pulse
    TIMER_A0->CTL = 0x0214;


    while(1){

        float f, c;
        uint16_t var;
        ADC14->CTL0 |=1;
        while(!ADC14->IFGR0);
        var= ADC14->MEM[5];


        c = ((((var * 3.3)/16384)*1000)-500)/10;
        f = (1.8*c)+32;


    }


}

void PORT5_IRQHandler(){
    SysTick_Delay(50);
    if((P5->IFG & BIT0)&&(i==0)){//if button 1 is pressed
         i++;

    }
        else{
            i--;

    }
    P5->IFG = 0;

}
void adcsetup(void){
    ADC14->CTL0 = 0x00000010;
    ADC14->CTL0 |= 0x04D80300;

    ADC14->CTL1 = 0x00000030;
    ADC14->MCTL[5] = 0;
    P5->SEL1 |= 0x20;
    P5->SEL0 |= 0x20;
    ADC14->CTL1 |= 0x00050000;
    ADC14->CTL0 |= 2;


}
void SysTick_init(){//SysTick Initialization from previous labs
    SysTick->CTRL = 0;
    SysTick->LOAD = 0x00FFFFFF;
    SysTick->VAL = 0;
    SysTick->CTRL = 0x00000005;
}

void SysTick_Delay(uint16_t delayms){//delay function from previous labs
    SysTick->LOAD = ((delayms *3000)-1);
    SysTick->VAL = 0;
    while((SysTick->CTRL & 0x00010000)==0);

}

