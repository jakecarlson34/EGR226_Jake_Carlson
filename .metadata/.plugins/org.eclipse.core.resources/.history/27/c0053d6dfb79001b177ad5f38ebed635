/**************************************************************************************
* Author: Jake Carlson
* Course: EGR 226 - 902
* Date: 02/28/2021
* Project: lab06part1
* File: main.c
* Description: This program takes user input from a keypad and prints it to the screen.
*
*
*
**************************************************************************************/

#include "msp.h"
#include <stdio.h>
#include <stdlib.h>

/**
 * main.c
 */
uint8_t ReadingPad(void);
void SystickI();
void Systick_delay(uint16_t delayms);
uint8_t num, ispressed;

void main(void)
{
    WDT_A->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;     // stop watchdog timer

    P4->SEL0 &= ~0xF;
    P4->SEL1 &= ~0xF;
    P4->DIR &= ~0xF;
    P4->REN |= 0xF;
    P4->OUT |= 0xF;

    P4->SEL0 &= ~0b01110000;
    P4->SEL1 &= ~0b01110000;
    P4->DIR &= ~0b01110000;

    SystickI();

    while(1){
        ispressed = ReadingPad();

        if(ispressed){
            if(num<10){
                printf("[%d]\n", num);
            }
            if(num==10){
               printf("[*]\n", num);
             }
            if(num==11){
               printf("[0]\n", num);
                        }
            if(num==12){
              printf("[#]\n", num);
         }
        }
    }

}

uint8_t ReadingPad(void){

    uint8_t column, row;

    for(column = 0; column<3; column++){
        P4DIR = 0x00;
        P4DIR |=BIT(4+column);
        P4OUT &= ~ BIT(4+column);
        Systick_delay(10);
        row = P4IN & 0x0F;

        while(!(P4IN & BIT0)|!(P4IN & BIT1)|!(P4IN & BIT2)|!(P4IN & BIT3));

        if(row != 0x0F){
            break;
        }
    }

    P4DIR &= ~100;
    if(column == 3){
        return 0;
    }
    if(row == 0x0E){
        num = column +1;
    }
    if(row == 0x0D){
       num = 3 + column +1;
        }
    if(row == 0x0B){
        num = 6+ column +1;
        }
    if(row == 0x07){
        num = 9 + column +1;
        }
    return 1;
}
void SystickI(){
    SysTick->CTRL = 0;
    SysTick->LOAD = 0x00FFFFFF;
    SysTick->VAL = 493;
    SysTick->CTRL = 0x00000005;
}
void Systick_delay(uint16_t delayms){
    SysTick->LOAD = ((delayms *3000)-1);
    SysTick->VAL = 493;
    while((SysTick->CTRL & 0x00010000)==0);

}
