#include "msp.h"
#include <stdio.h>
uint16_t period;

/**
 * main.c
 */
void main(void)
{
    WDT_A->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;     // stop watchdog timer


    P2->SEL0 |= BIT4;
    P2->SEL1 &= ~BIT4;
    P2->DIR |= BIT4;

    P5->SEL0 |= BIT7;
    P5->SEL1 &= ~BIT7;
    P5->DIR &= ~BIT7;

    P2->SEL0 &= ~BIT0;
    P2->SEL1 &= ~BIT0;
    P2->DIR |= BIT0;
    P2->OUT &= ~BIT0;


    TIMER_A0->CTL = 0b1000010100;
    TIMER_A0->CCR[0] = 37500-1;
    TIMER_A0->CCR[1] = 37500*.5-1;
    TIMER_A0->CCTL[1] = 0b11100000;
    TIMER_A2->CTL = 0b1000100100;
    TIMER_A2->CCTL[2] = 0b0100100100010000;

    NVIC_EnableIRQ(TA2_N_IRQn);
    __enable_interrupt();

    while(1){
        __delay_cycles(3000000);
        printf("= %d\n", period);

    }
}

void TA2_N_IRQHandler(){
    static uint16_t first = 0, second = 0;
    if(TIMER_A2->CCTL[2]&BIT0){
        first = second;
        second = TIMER_A2->CCR[2];
        period = second - first;
        if(period == 37500){
            P2->OUT |= BIT0;
        }
        else{
            P2->OUT &=~BIT0;
        }
    }
    TIMER_A2->CCTL[2] &= ~(BIT0|BIT1);


}
