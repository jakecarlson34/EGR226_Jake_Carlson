/**************************************************************************************
 * Author: Jake Carlson
 * Course: EGR 226 - 902
 * Date: 04/1/2021
 * Project: lab10part3
 * File: part3main.c
 * Description: This program uses the LCD to print the current temp and a push button
 * to cycle between Farenheit and Celsius.
 *
 **************************************************************************************/


#include "msp.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include "SysTick_Library.h"
#include "LCD_Library.h"

//function prototypes
uint8_t num, pressed;
uint8_t Keypad_Read(void);//function prototypes
void keyinit();
void dcmoto();




void main(void)
{
    WDT_A->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;     // stop watchdog timer



    enum states{MAIN, DC, LIGHTS, DOOR
        };

    enum states state;

    SysTickInit_NoInterrupts();
    lcdInit();
    keyinit();
    lcdClear();

        P2->SEL1 &=~BIT4;
        P2->SEL0 |= BIT4;//Timer A initialization for Dc motor
        P2->DIR |= BIT4;

       TIMER_A0->CCR[0] = 30000;
       TIMER_A0->CCTL[1] = TIMER_A_CCTLN_OUTMOD_7;//Timer A pulse
       TIMER_A0->CTL = 0x0214;

state = MAIN;


    while(1){
        pressed = Keypad_Read();

        switch(state){

        case MAIN:

        lcdSetText("(1) Door", 3 , 0);//function from LCD library
        lcdSetText("(2) Motor", 3 , 1);
        lcdSetText("(3) Lights", 3 , 2);



        if(pressed){
            SysTick_delay_ms(10);
            if(num==2){
                lcdClear();
                SysTick_delay_ms(10);
                state = DC;
            }
        }

        case DC:
            lcdSetText("Motor Speed", 2, 0);
            lcdSetText("(0-9)",5, 1);
            dcmoto();
               }





        }



}

uint8_t Keypad_Read(void){//function given by Professor Krug

    uint8_t col, row;

    for(col = 0; col<3; col++){
        P4DIR = 0x00;
        P4DIR |=BIT(4+col);
        P4OUT &= ~BIT(4+col);
        SysTick_delay_ms(10);
        row = P4IN & 0x0F;

        while(!(P4IN & BIT0)|!(P4IN & BIT1)|!(P4IN & BIT2)|!(P4IN & BIT3));

        if(row != 0x0F){
            break;
        }
    }

    P4DIR = 0x00;
    if(col == 3){
        return 0;
    }
    if(row == 0x0E){
        num = col +1;
    }
    if(row == 0x0D){
       num = 3 + col +1;
        }
    if(row == 0x0B){
        num = 6+ col +1;
        }
    if(row == 0x07){
        num = 9 + col +1;
        }
    return 1;
}
void keyinit(){

    P4->SEL0 &= ~0xF;
    P4->SEL1 &= ~0xF;//initialize rows
    P4->DIR &= ~0xF;
    P4->REN |= 0xF;
    P4->OUT |= 0xF;

    P4->SEL0 &= ~0x70;
    P4->SEL1 &= ~0x70;//initialize columns
    P4->DIR &= ~0x70;
}

void dcmoto(){
    double dutyCyc, on;
    if(pressed){
       if(num == 11){//when 0 is pressed the duty cycle is 0
           dutyCyc = 0;
       }
       if(num<10){//when any other key is pressed that key is the dutycycle.
           dutyCyc = num;
       }

       on =((dutyCyc/10)*30000);//duty cycle is multiplied by period
       TIMER_A0->CCR[1] = on;//run DC motor

   }
}
