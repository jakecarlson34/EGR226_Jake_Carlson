/**************************************************************************************
* Author: Jake Carlson
* Course: EGR 226 - 902
* Date: 02/28/2021
* Project: lab07part1
* File: part1main.c
* Description: This program collects the users input of a 4 digit PIN code and prints
* this code to the screen. This program will also validate if the pin was entered
* correctly the second time.
*
**************************************************************************************/




#include "msp.h"


void LCD_init();
void delay_micro(uint32_t microsec);
void pulseEnable();
void pushNibble(uint8_t nibble);
void pushByte(uint8_t byte);
void commandWrite(uint8_t command);
void dataWrite(uint8_t data);
void SysTick_init();
void SysTick_Delay(uint16_t delayms);






void main(void)
{
	WDT_A->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;		// stop watchdog timer

	P4->SEL0 &= ~(BIT0|BIT1|BIT2|BIT4|BIT5|BIT6|BIT7);
	P4->SEL1 &= ~(BIT0|BIT1|BIT2|BIT4|BIT5|BIT6|BIT7);
	P4->DIR |= (BIT0|BIT1|BIT2|BIT4|BIT5|BIT6|BIT7);
	P4->OUT &= ~(BIT0|BIT1|BIT2|BIT4|BIT5|BIT6|BIT7);

	SysTick_init();
	SysTick_Delay(60);
	LCD_init();

	while(1);


}

void LCD_init(void){
    P4->OUT &= ~BIT0;

    commandWrite(0x03);
    SysTick_Delay(10);
    commandWrite(0x03);
    delay_micro(200);
    commandWrite(0x03);
    SysTick_Delay(10);

    commandWrite(0x02);
    delay_micro(100);
    commandWrite(0x02);

    commandWrite(0x08);
    delay_micro(100);

    commandWrite(0x0F);
    delay_micro(100);

    commandWrite(0x01);
    delay_micro(100);

    commandWrite(0x06);
    delay_micro(100);
}

void SysTick_init(){//SysTick Initialization
    SysTick->CTRL = 0;
    SysTick->LOAD = 0x00FFFFFF;
    SysTick->VAL = 0;
    SysTick->CTRL = 0x00000005;
}

void SysTick_Delay(uint16_t delayms){//delay function
    SysTick->LOAD = ((delayms *3000)-1);
    SysTick->VAL = 0;
    while((SysTick->CTRL & 0x00010000)==0);

}

void delay_micro(uint32_t microsec){
    SysTick->LOAD = (microsec*3 - 1);
    SysTick->VAL = 0;
    while((SysTick->CTRL & 0x00010000)== 0);
}
void pulseEnable(void){
    P4->OUT &= ~BIT2;
    delay_micro(10);
    P4->OUT |= BIT2;
    delay_micro(10);
    P4->OUT &= ~BIT2;
    delay_micro(10);
}
void pushNibble(uint8_t nibble){
    P4->OUT &= ~0xF0;
    P4->OUT |= (nibble & 0x0F) << 4;
    pulseEnable();
}
void pushByte(uint8_t byte){
    uint8_t nibble;

    nibble = (byte & 0xF0) >> 4;
    pushNibble(nibble);
    nibble = byte & 0x0F;
    pushNibble(nibble);
    delay_micro(100);
}
void commandWrite(uint8_t command){
    P4->OUT &= ~BIT0;
    pushByte(command);
}
void dataWrite(uint8_t data){
    P4->OUT |= BIT0;
    pushByte(data);
}

